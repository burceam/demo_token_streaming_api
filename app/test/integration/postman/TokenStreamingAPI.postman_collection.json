{
	"info": {
		"_postman_id": "ea78a77f-6e7d-42ea-9d64-e40f0989d230",
		"name": "TokenStreamingAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HealthCheck",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{service_base_url}}/health",
					"host": [
						"{{service_base_url}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Encode_01_SUCCESS",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{service_base_url}}/encode?text=\"Hello, world! This is an example text 2.\"",
					"host": [
						"{{service_base_url}}"
					],
					"path": [
						"encode"
					],
					"query": [
						{
							"key": "text",
							"value": "\"Hello, world! This is an example text 2.\""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Decode_01_SUCCESS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Hello, world! This is\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stop_sequences\": [\r\n        \"example\",\r\n        \"bar\"\r\n    ],\r\n    \"end_sequences\": [\r\n        \"an\",\r\n        \"bar2\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{service_base_url}}/decode",
					"host": [
						"{{service_base_url}}"
					],
					"path": [
						"decode"
					]
				}
			},
			"response": []
		},
		{
			"name": "Decode_01_empty_body_SUCCESS",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{service_base_url}}/decode",
					"host": [
						"{{service_base_url}}"
					],
					"path": [
						"decode"
					]
				}
			},
			"response": []
		}
	]
}